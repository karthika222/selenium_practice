using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Internal;
using Polly;

namespace TestProject1
{
    public class Wait_And_Retry
    {
        private IWebDriver driver;
        [SetUp]
        public void Setup()
        {

            IWebDriver driver = new ChromeDriver();
            driver.Navigate().GoToUrl("http://eaapp.somee.com/");
            IWebElement loginlink = driver.FindElement(By.Id("loginLink"));
            loginlink.Click();
        }

        [Test]

        public void Test2()
        {
            //Retry mechanism for polly
            var retryPolicy = Policy.Handle<NoSuchElementException>().Or
                                        <StaleElementReferenceException>().
                                        WaitAndRetry(retryCount: 4,
                                        sleepDurationProvider: retryProvider =>
                                        TimeSpan.FromSeconds(3),
                                        onRetry: (exception, timeSpan, retryCount, Context)
                                        =>
                                        {
                                            Console.WriteLine($"Retrying...Attempt{retryCount}) with Exception {exception.Message}");

                                        });
            var txtusername=retryPolicy.Execute(() =>
                {
                    return driver.FindElement(By.Id("UserName"));

                });

            IWebElement txtuser = driver.FindElement(By.Name("UserName"));
            txtuser.SendKeys("admin");
            IWebElement pswd = driver.FindElement(By.Id("Password"));
            pswd.SendKeys("password");
            // Identifying the login button
            // IWebElement sub = driver.FindElement(By.CssSelector(".btn.btn-default"));
            IWebElement sub = driver.FindElement(By.CssSelector("input[type='submit']"));

            sub.Submit();


        }
    }
}
